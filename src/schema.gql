# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Article {
  body: String!
  id: Int
  title: String!
}

input ArticleDto {
  body: String
  id: Int
  title: String
}

type Auth {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Banner {
  id: Float!
  urlImg: String!
  userId: Float!
}

input BannerDto {
  id: Float
  urlImg: String
  userId: Float
}

type Brand {
  brandName: String!
  id: Float!
  status: String!
}

input BrandDto {
  brandName: String!
  id: Float
  status: String!
}

type Category {
  id: Float!
  name: String!
  status: Boolean!
}

input CategoryDTO {
  id: Float
  name: String
  status: Boolean!
}

type Customer {
  PhoneNumber: String
  accountName: String!
  address: String
  email: String
  hashedPassword: String
  id: Int!
  name: String
}

input CustomerDto {
  PhoneNumber: String
  accountName: String!
  address: String
  email: String
  hashedPassword: String
  id: Int
  name: String!
}

type LogOutResponse {
  loggedOut: Boolean!
  message: String!
}

type Mutation {
  createArticle(data: ArticleDto!): UserResponse!
  createBanner(body: BannerDto!): UserResponse!
  createBrand(body: BrandDto!): UserResponse!
  createCategory(body: CategoryDTO!): UserResponse!
  createCustomerAccount(body: CustomerDto!): UserResponse!
  createServiceShop(body: ServiceShopDTO!): UserResponse!
  deleteArticle(id: Float!): UserResponse!
  deleteBanner(id: [Int!]!): UserResponse!
  deleteBrand(id: [Int!]!): UserResponse!
  deleteCategory(id: [Int!]!): UserResponse!
  deleteCustomerAccount(id: [Int!]!): UserResponse!
  deleteServiceShop(id: [Int!]!): UserResponse!
  deleteUser(id: [Int!]!): UserResponse!
  getNewTokens: NewTokensResponse!
  logOut(id: Int!): LogOutResponse!
  removeAuth(id: Int!): Auth!
  signin(signInInput: SignInInput!): SignResponse!
  signup(signUpInput: SignUpInput!): SignResponse!
  updateArticle(data: ArticleDto!): UserResponse!
  updateAuth(updateAuthInput: UpdateAuthInput!): Auth!
  updateBanner(body: BannerDto!): UserResponse!
  updateBrand(body: BrandDto!): UserResponse!
  updateCategory(body: CategoryDTO!): UserResponse!
  updateCustomerAccount(body: CustomerDto!): UserResponse!
  updateServiceShop(body: ServiceShopDTO!): UserResponse!
  updateUser(user: UserUpdateDto!): UserResponse!
}

type NewTokensResponse {
  accessToken: String!
  refreshToken: String!
}

type Query {
  auth(id: Int!): Auth!
  getAllBanner(id: Float): [Banner!]!
  getAllBrand(id: Float): [Brand!]!
  getArticle(id: Int): [Article!]!
  getCategory(id: Float): [Category!]!
  getServiceShop(id: Float): [ServiceShop!]!
  hello: String!
  hello1: String!
  hello2: String!
  listCustomerAccount(id: Int): [Customer!]!
  listUser(id: Int): [User!]!
}

type ServiceShop {
  id: Int
  name: String!
  price: Float
}

input ServiceShopDTO {
  id: Int
  name: String!
  price: Float
}

input SignInInput {
  email: String!
  password: String!
}

type SignResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

input SignUpInput {
  email: String!
  password: String!
  username: String!
}

input UpdateAuthInput {
  email: String
  id: Int!
  password: String
  username: String
}

type User {
  PhoneNumber: String
  Role: String
  email: String
  id: Int!
  username: String
}

type UserResponse {
  response: String!
}

input UserUpdateDto {
  PhoneNumber: String
  Role: String
  email: String
  id: Int!
  username: String
}